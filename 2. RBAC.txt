+--------------------+       grants         +------------------------------+
|    User or         |--------------------->|      RoleBinding             |
| ServiceAccount     |                      +------------------------------+
+--------------------+                             |
                                                   |
                                                 attaches
                                                   |
                                             +----------+
                                             |  Role    |
                                             +----------+
                                                 |
                                          permissions for
                                                 |
                                        +-------------------+
                                        | Resources (Pods,  |
                                        | Deployments, etc.)|
                                        +-------------------+


+---------+         +-----------------------+         +-------------+
|  User   |-------> | ClusterRoleBinding    |-------->| ClusterRole |
+---------+         +-----------------------+         +-------------+



+--------------------- Kubernetes Cluster ----------------------+
| +----------+  +----------+  +---------+   +----------+       |
| | hrapp    |  | website  |  |  DB     |   | default  |       |
| |namespace |  |namespace |  |namespace|   |namespace |       |
| +----------+  +----------+  +---------+   +----------+       |
|                             +--------------+                 |
|                             | kube-system  |                 |
|                             |  namespace   |                 |
|                             +--------------+                 |
+--------------------------------------------------------------+

       |                |                      |
   +---|--------+   +---|----+           +-----|-----+
   | Engineer/  |   | App    |           | Database  |
   |   Admin    |   |  Dev   |           | Managers  |
   +------------+   +--------+           +-----------+
       |                     |                 |
       |                     |                 |
       |                +----v----+      +-----v-----+
       |                | website |      |    DB     |
       |                |namespace|      | namespace |
       |                +---------+      +-----------+
       |                                     
       +-----------------------------------+
                 (access to all)


Legend:
- Each box inside the cluster = a namespace: hrap, website, database, default, kube-system.
- Roles on the bottom control access:
  - Engineer/Admin: full cluster access (all namespaces)
  - App Dev: access to website namespace
  - Database Managers: access to database namespace


#identities in k8s
Users
Groups
ServiceAccounts


#Creating a user
openssl genrsa -out plssub.key 2048
openssl req -new -key plssub.key -out plssub.csr -subj '/CN=plssub/O=databases' 
openssl x509 -req -in plssub.csr -CAcreateserial -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -out plssub.crt -days 1000

# We should be having 3 files now
-rw-r--r--  1 root root 1115 Jul 21 16:57 plssub.crt
-rw-r--r--  1 root root  915 Jul 21 16:57 plssub.csr
-rw-------  1 root root 1704 Jul 21 16:56 plssub.key

# Creating a kubeconfig file for user plssub
kubectl --kubeconfig=plssub.config config set-cluster plssubCluster
kubectl --kubeconfig=plssub.config config set-cluster plssubCluster --server=https://192.168.227.128:6443
kubectl --kubeconfig=plssub.config config set-cluster plssubCluster  --certificate-authority=/etc/kubernetes/pki/ca.crt --embed-certs

#Set creds for user in config
kubectl --kubeconfig=plssub.config config set-credentials plssub --client-certificate=/root/Desktop/plssub.crt --client-key=/root/Desktop/plssub.key --embed-certs --username plssub

#Create context
kubectl --kubeconfig=plssub.config config set-context plssubContext --cluster plssubCluster --user plssub --namespace databases

kubectl --kubeconfig=plssub.config config use-context plssubContext

#Verify connection using config file
kubectl --kubeconfig=plssub.config version


# The next step would be to assign permissions to user golu using role and role bindings

#Creating a role. The namespace must exist before running! (kubectl create ns databases)
kubectl --namespace databases create role DatabaseManager --verb=get,list,create,delete --resource=pods

#Creating a Role Binding
kubectl --namespace databases create rolebinding DatabaseManagerBinding --user=plssub --role=DatabaseManager

kubectl --kubeconfig=plssub.config get pods --namespace databases


